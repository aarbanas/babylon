// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                         Int                     @id @default(autoincrement())
  email                      String                  @unique
  password                   String
  role                       Role
  active                     Boolean                 @default(false)
  termsAndConditionsAccepted Boolean                 @default(false)
  createdAt                  DateTime                @default(now())
  updatedAt                  DateTime                @updatedAt
  userAttributes             UserAttributes?         @relation(fields: [userAttributesId], references: [id], onDelete: Cascade)
  userAttributesId           Int?                    @unique
  organisationAttributes     OrganisationAttributes? @relation(fields: [organisationAttributesId], references: [id], onDelete: Cascade)
  organisationAttributesId   Int?                    @unique
  profilePhotoKey            String?
  Subscription               Subscription[]
}

model UserAttributes {
  id           Int           @id @default(autoincrement())
  firstname    String
  lastname     String
  city         String
  phone        String?
  type         UserType?
  User         User?
  certificates Certificate[]
}

model OrganisationAttributes {
  id     Int    @id @default(autoincrement())
  name   String
  street String
  city   String
  oib    String
  User   User?
}

model Certificate {
  id              Int             @id @default(autoincrement())
  type            CertificateType
  validTill       DateTime?
  key             String
  active          Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  userAttribute   UserAttributes? @relation(fields: [userAttributeId], references: [id], onDelete: Cascade)
  userAttributeId Int?
}

model Subscription {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  activeTill DateTime?
  User       User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int?
}

enum Role {
  USER
  ADMIN
  ORGANISATION
}

enum UserType {
  DOCTOR
  NURSE
  LIFEGUARD
}

enum CertificateType {
  UNIVERSITY
  REDCROSS
  ID
}
